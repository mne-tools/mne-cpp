name: Linux

on:
  pull_request:
    branches:
    - master

jobs:
  Release:
    runs-on: ubuntu-latest

    steps:
    - name: Clone repository
      uses: actions/checkout@v1
    - name: Install Qt
      run: |
        sudo apt-get install build-essential libgl1-mesa-dev -y
        pip3 install setuptools wheel
        pip3 install aqtinstall --pre
        python3 -m aqt install --outputdir $HOME/Qt 5.10.1 linux desktop --module qtcharts
        echo "::add-path::$HOME/Qt/5.10.1/gcc_64/bin"
    - name: Configure and compile MNE-CPP
      run: |        
        qmake -r MNECPP_CONFIG+=noTests
        make -j2 
        
  Minimal:
    runs-on: ubuntu-16.04

    steps:
    - name: Clone repository
      uses: actions/checkout@v1
    - name: Install Qt
      run: |
        sudo apt-get install build-essential libgl1-mesa-dev -y
        pip3 install setuptools wheel
        pip3 install aqtinstall --pre
        python3 -m aqt install --outputdir $HOME/Qt 5.3 linux desktop
        echo "::add-path::$HOME/Qt/5.3/gcc_64/bin"
    - name: Configure and compile MNE-CPP
      run: |
        qmake -r MNECPP_CONFIG+=noTests MNECPP_CONFIG+=minimalVersion
        make -j2
        
  Tests:
    runs-on: ubuntu-latest

    steps:
    - name: Clone repository
      uses: actions/checkout@v1
    - name: Install Codecov
      run: |
        sudo pip install codecov 
    - name: Install Qt
      run: |
        sudo apt-get install build-essential libgl1-mesa-dev -y
        pip3 install setuptools wheel
        pip3 install aqtinstall --pre
        python3 -m aqt install --outputdir $HOME/Qt 5.10.1 linux desktop --module qtcharts
        echo "::add-path::$HOME/Qt/5.10.1/gcc_64/bin"
    - name: Configure and compile MNE-CPP
      run: |
        qmake -r MNECPP_CONFIG+=withCodeCov MNECPP_CONFIG+=noApplications MNECPP_CONFIG+=noExamples
        make -j2
    - name: Run tests and upload results to Codecov
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        git clone https://github.com/mne-tools/mne-cpp-test-data.git ./bin/mne-cpp-test-data
        for test in ./bin/test_*;
        do
          # Run all tests and call gcov on all cpp files after each test run. Then upload to codecov for every test run.
          # Codecov is able to process multiple uploads and merge them as soon as the CI job is done.
          ./$test
          find ./libraries -type f -name "*.cpp" -execdir gcov {} \; > /dev/null          
          codecov
        done

  Documentation:
    runs-on: ubuntu-latest

    steps:
    - name: Clone repository
      uses: actions/checkout@v1
    - name: Install Qt Dev Tools, Doxygen and Graphviz
      run: |
        sudo apt-get install -qq qttools5-dev-tools doxygen graphviz
    - name: Run Doxygen and package result
      run: |        
        cd doc
        doxygen mne-cpp_doxyfile
        tar cfvz docu_doxygen.tar.gz html     
    - name:  Upload artifact to Github actions log screen
      uses: actions/upload-artifact@v1
      with:
        name: docu_doxygen.tar.gz
        path: .