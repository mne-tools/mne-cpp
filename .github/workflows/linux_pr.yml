name: Linux

on:
  pull_request:
    branches:
    - master
    - github_actions

jobs:
  ReleaseQtLatest:
    runs-on: ubuntu-latest

    steps:
    - name: Clone repository
      uses: actions/checkout@v1
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.14.0
        modules: qtcharts
    - name: Configure and compile MNE-CPP
      run: |    
        qmake -r MNECPP_CONFIG+=noTests
        make -j2 

  ReleaseQtMinimum:
    runs-on: ubuntu-latest

    steps:
    - name: Clone repository
      uses: actions/checkout@v1
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.10.1
        modules: qtcharts
    - name: Configure and compile MNE-CPP
      run: |
        qmake -r MNECPP_CONFIG+=noTests
        make -j2 
        
  Minimal:
    runs-on: ubuntu-16.04

    steps:
    - name: Clone repository
      uses: actions/checkout@v1
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.4
        modules: qtcharts
    - name: Configure and compile MNE-CPP
      run: |
        qmake -r MNECPP_CONFIG+=noTests MNECPP_CONFIG+=minimalVersion
        make -j2
        
  Tests:
    runs-on: ubuntu-latest

    steps:
    - name: Clone repository
      uses: actions/checkout@v1
    - name: Install Codecov
      run: |
        sudo pip install codecov 
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.10.1
        modules: qtcharts
    - name: Configure and compile MNE-CPP
      run: |
        qmake -r MNECPP_CONFIG+=withCodeCov MNECPP_CONFIG+=noApplications MNECPP_CONFIG+=noExamples
        make -j2
    - name: Run tests and upload results to Codecov
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        QTEST_FUNCTION_TIMEOUT: 900000
      run: |
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/lib
        git clone https://github.com/mne-tools/mne-cpp-test-data.git ./bin/mne-cpp-test-data
        for test in ./bin/test_*;
        do
          # Run all tests and call gcov on all cpp files after each test run. Then upload to codecov for every test run.
          # Codecov is able to process multiple uploads and merge them as soon as the CI job is done.            
          echo ">> Starting $test"
          $test
          find ./libraries -type f -name "*.cpp" -execdir gcov {} \; > /dev/null
          # Hide codecov output since it corrupts the log too much
          codecov > /dev/null
        done

  Documentation:
    runs-on: ubuntu-latest

    steps:
    - name: Clone repository
      uses: actions/checkout@v1
    - name: Install Qt Dev Tools, Doxygen and Graphviz
      run: |
        sudo apt-get update -qq
        sudo apt-get install -qq qttools5-dev-tools doxygen graphviz
    - name: Run Doxygen and package result
      run: |        
        cd doc
        doxygen mne-cpp_doxyfile
        tar cfvz docu_doxygen.tar.gz html